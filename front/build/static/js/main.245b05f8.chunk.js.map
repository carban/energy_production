{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","capaN","capaH","capaT","costoN","costoH","costoT","matrix","profit","sol","loading","values","setValues","handler","e","target","name","value","parseInt","handlerMatrix","i","j","m","className","type","placeholder","onChange","Table","striped","style","map","ele","scope","ele2","Input","bind","Button","onClick","l","length","push","color","pop","a","preventDefault","capacidades","costos","cl","di","data","clientes","dias","d","c","trMatrix","axios","post","then","res","catch","err","console","log","readOnly","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.245b05f8.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Table, Input, Button } from \"reactstrap\";\nimport ReactLoading from \"react-loading\";\nimport axios from \"axios\";\nimport './App.css';\n\nconst App = () => {\n\n  const initialState = {\n    capaN: 1000,\n    capaH: 300,\n    capaT: 500,\n    costoN: 22,\n    costoH: 10,\n    costoT: 30,\n    matrix: [\n      [800, 300, 100, 230, 500],\n      [200, 700, 350, 420, 0]\n    ],\n\n    profit: 0,\n    sol: [],\n    loading: false\n  }\n\n  const [values, setValues] = useState(initialState);\n\n  const handler = e => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: parseInt(value) });\n  }\n\n  const handlerMatrix = (i, j, e) => {\n    let m = values.matrix;\n    const { value } = e.target;\n    m[i][j] = parseInt(value);\n    setValues({ ...values, matrix: m });\n  }\n\n  const trMatrix = (m, c, d) => {\n    let a = \"d=[|\";\n    for (let i = 0; i < c; i++) {\n      for (let j = 0; j < d; j++) {\n        if (j === d - 1) {\n          a += m[i][j];\n        } else {\n          a += m[i][j] + \",\";\n        }\n      }\n      a += \"|\";\n    }\n    a += \"];\";\n    return a;\n  }\n\n  const submit = e => {\n    e.preventDefault();\n    let capacidades = \"capacidades=[\" + values.capaN + \",\" + values.capaH + \",\" + values.capaT + \"];\";\n    let costos = \"costos=[\" + values.costoN + \",\" + values.costoH + \",\" + values.costoT + \"];\";\n    let cl = values.matrix.length;\n    let di = values.matrix[0].length;\n    let clientes = \"n_clientes=\" + cl + \";\";\n    let dias = \"n_dias=\" + di + \";\";\n    let d = trMatrix(values.matrix, cl, di);\n\n    let data = { capacidades, costos, clientes, dias, d };\n\n    setValues({ ...values, loading: true, profit: 0, sol: [] });\n    axios.post(\"http://localhost:3030/api/solve/model1/\", data)\n      .then(res => {\n        let { profit, sol } = res.data;\n        setValues({ ...values, profit: profit, sol: sol, loading: false });\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  const newClient = () => {\n    let l = values.matrix[0].length;\n    let a = [];\n\n    for (let i = 0; i < l; i++) {\n      a.push(0);\n    }\n\n    let m = values.matrix;\n    m.push(a);\n    setValues({ ...values, matrix: m });\n  }\n\n  const newDay = () => {\n    let m = values.matrix;\n    let l = values.matrix.length;\n    for (let i = 0; i < l; i++) {\n      m[i].push(0);\n    }\n    setValues({ ...values, matrix: m });\n  }\n\n  const rmClient = () => {\n    let m = values.matrix;\n    m.pop();\n    setValues({ ...values, matrix: m });\n  }\n\n  const rmDay = () => {\n    let m = values.matrix;\n    let l = values.matrix.length;\n    for (let i = 0; i < l; i++) {\n      m[i].pop();\n    }\n    setValues({ ...values, matrix: m });\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Energy Production\n      </header>\n      <div>\n        <br></br>\n        <b>Capacidades</b>\n        <br></br>\n        <input type=\"number\" placeholder=\"N\" name=\"capaN\" value={values.capaN} onChange={handler}></input>\n        <input type=\"number\" placeholder=\"H\" name=\"capaH\" value={values.capaH} onChange={handler}></input>\n        <input type=\"number\" placeholder=\"T\" name=\"capaT\" value={values.capaT} onChange={handler}></input>\n        <br></br>\n        <b>Costos</b>\n        <br></br>\n        <input type=\"number\" placeholder=\"costoN\" name=\"costoN\" value={values.costoN} onChange={handler}></input>\n        <input type=\"number\" placeholder=\"costoH\" name=\"costoH\" value={values.costoH} onChange={handler}></input>\n        <input type=\"number\" placeholder=\"costoT\" name=\"costoT\" value={values.costoT} onChange={handler}></input>\n\n      </div>\n      <br></br>\n      <center>\n\n        <Table striped style={{ \"width\": \"90%\" }}>\n          <thead>\n            <tr>\n              <th>#</th>\n              {\n                values.matrix[0].map((ele, i) => (\n                  <th key={i}>\n                    <center>Dia {i + 1}</center>\n                  </th>\n                ))\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {\n              values.matrix.map((ele, i) => (\n                <tr key={i}>\n                  <th scope=\"row\">Cliente {i + 1}</th>\n                  {\n                    ele.map((ele2, j) => (\n                      <td key={j}>\n                        <Input type=\"number\" placeholder=\"Gasto\"\n                          value={values.matrix[i][j]}\n                          onChange={handlerMatrix.bind(this, i, j)} />\n                      </td>\n                    ))\n                  }\n                </tr>\n              ))\n            }\n          </tbody>\n        </Table>\n\n        <br></br>\n        <Button onClick={newDay.bind(this)} color=\"success\">Nuevo Dia</Button>\n        <Button onClick={rmDay.bind(this)} color=\"danger\">Quitar Dia</Button>\n        <Button onClick={newClient.bind(this)} color=\"success\">Nuevo Cliente</Button>\n        <Button onClick={rmClient.bind(this)} color=\"danger\">Quitar Cliente</Button>\n        <br></br>\n        <br></br>\n        <Button onClick={submit.bind(this)} color=\"primary\">Calcular</Button>\n\n        <br></br>\n        <hr></hr>\n        <br></br>\n\n        {\n          values.sol.length === 0 ?\n            (\n              values.loading ? <ReactLoading type=\"spin\" color=\"blue\" /> : true\n            )\n            :\n            (\n              <div>\n                <h4>Ganancia: {values.profit}</h4>\n                <br></br>\n                <Table striped style={{ \"width\": \"90%\" }}>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      {\n                        values.sol[0].map((ele, i) => (\n                          <th key={i}>\n                            <center>Dia {i + 1}</center>\n                          </th>\n                        ))\n                      }\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      values.sol.map((ele, i) => (\n                        <tr key={i}>\n                          <th scope=\"row\">Tr {i + 1}</th>\n                          {\n                            ele.map((ele2, j) => (\n                              <td key={j}>\n                                <Input type=\"number\" placeholder=\"Gasto\"\n                                  value={values.sol[i][j]}\n                                  readOnly />\n                              </td>\n                            ))\n                          }\n                        </tr>\n                      ))\n                    }\n                  </tbody>\n                </Table>\n              </div>\n            )\n        }\n      </center>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}